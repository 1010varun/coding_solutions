Maximum Subarray


class Solution {
public:
    int maxSubArray(vector<int>& nums) 
    {
        int m=INT_MIN, ma=0;
        for(int i=0;i<nums.size();i++)
        {
           ma=ma+nums.at(i);
            if(m<ma)
            {
                 m=ma;
            }
            if(ma<0)
            {
                ma=0;
            }
        }
        return m;
        
    }
};



Unique path


class Solution {
public:
    int uniquePaths(int m, int n)
    {
       int count[m][n]; 
  
    
    for (int i = 0; i < m; i++) 
        count[i][0] = 1; 
  
 
    for (int j = 0; j < n; j++) 
        count[0][j] = 1; 
   
    for (int i = 1; i < m; i++) { 
        for (int j = 1; j < n; j++) 
  
    
            count[i][j] = count[i - 1][j] + count[i][j - 1]; 
    } 
    return count[m - 1][n - 1]; 
    }
};
